version: "3"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 2181:2181
    logging:
      driver: none
  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    logging:
      driver: none
    ports:
      - 9092:9092
    links:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "edge-to-core:1:1,subscription-events:1:1"
      KAFKA_LOG_DIRS: "/kafka/kafka-logs"
    volumes:
      - ./kafka/:/kafka
  # kafkacli:
  #   image: taion809/kafka-cli:0.10.2.0
  #   command: kafka-console-consumer.sh --bootstrap-server kafka:9092 --topic subscription-events --from-beginning
  #   stdin_open: true
  #   tty: true
  #   links:
  #     - zookeeper
  #     - kafka
  #   depends_on:
  #     - zookeeper
  #     - kafka
  core-aerospikedb:
    image: aerospike/aerospike-server-enterprise
    command: --config-file /opt/aerospike/etc/aerospike.conf
    ports:
      - 3000:3000
      - 3001:3001
      - 3002:3002
      - 3003:3003
    volumes:
      - ./aerospike/core/etc/aerospike:/opt/aerospike/etc
      - ./aerospike/core/log:/aerospike/log
      - ./aerospike/core/data:/aerospike/data
  edge-aerospikedb:
    image: aerospike/aerospike-server-enterprise
    command: --config-file /opt/aerospike/etc/aerospike.conf
    ports:
      - 3010:3010
      - 3011:3011
      - 3012:3012
      - 3013:3013
    volumes:
      - ./aerospike/edge/etc/aerospike:/opt/aerospike/etc
      - ./aerospike/edge/etc/aerospike-kafka:/etc/aerospike-kafka
      - ./aerospike/edge/log:/aerospike/log
      - ./aerospike/edge/data:/aerospike/data
  edge-exporter:
    container_name: edge_exporter
    build:
      context: ./edge-exporter
      args:
        AEROSPIKE_USER_NAME: "<your user name>"
        AEROSPIKE_PASSWORD: "<your password>"
    depends_on:
      - zookeeper
    links:
      - zookeeper
    ports:
      - 8080:8080
    volumes:
      - ./aerospike/edge/etc/aerospike:/etc/aerospike
      - ./aerospike/edge/etc/aerospike-kafka:/etc/aerospike-kafka
      - ./aerospike/edge/log:/aerospike/log
  data-initializer:
    container_name: data-initializer
    build:
      context: ./data-initializer/
    volumes:
      - ./data-initializer/src:/usr/src/app/src
    environment:
      CORE_HOST: "core-aerospikedb"
      CORE_PORT: 3000
      SLEEP: 5
    links:
      - core-aerospikedb
    depends_on:
      - core-aerospikedb
  event-collector:
    container_name: event-collector
    build:
      context: ./event-collector/
    ports:
      - 4000:4000
    environment:
      EDGE_HOST: "edge-aerospikedb"
      EDGE_PORT: 3010
      PORT: 4000
      SLEEP: 5
    links:
      - edge-aerospikedb
    depends_on:
      - edge-aerospikedb
  publisher-simulator:
    container_name: publisher-simulator
    build:
      context: ./publisher-simulator/
    environment:
      CORE_HOST: "core-aerospikedb"
      CORE_PORT: 3000
      PORT: 4000
      EVENT_INTERVAL: 1500
      SLEEP: 10
    volumes:
      - ./publisher-simulator/src:/usr/src/app/src
    links:
      - core-aerospikedb
    depends_on:
      - core-aerospikedb
      - event-collector
  aggregator-reducer:
    container_name: aggregator-reducer
    build:
      context: ./aggregator-reducer/
    environment:
      CORE_HOST: "core-aerospikedb"
      CORE_PORT: 3000
      SLEEP: 20
      EVENT_TOPIC: "edge-to-core"
      SUBSCRIPTION_TOPIC: "subscription-events"
      KAFKA_CLUSTER: "kafka:9092"
    volumes:
      - ./aggregator-reducer/src:/usr/src/app/src
    links:
      - core-aerospikedb
    depends_on:
      - core-aerospikedb
      - kafka
  campaign-service:
    container_name: campaign-service
    build:
      context: ./campaign-service/
    environment:
      CORE_HOST: "core-aerospikedb"
      CORE_PORT: 3000
      SLEEP: 25
      SUBSCRIPTION_TOPIC: "subscription-events"
      KAFKA_CLUSTER: "kafka:9092"
    ports:
      - 4050:4000
    volumes:
      - ./campaign-service/src:/usr/src/app/src
    links:
      - core-aerospikedb
    depends_on:
      - core-aerospikedb
      - kafka
  campaign-ui:
    container_name: campaign-ui
    build:
      context: ./campaign-ui
    environment:
      CAMPAIGN_SERVICE: "campaign-service:4050"
    volumes:
      - ./campaign-service/src:/usr/src/app/src
    ports:
      - 5000:3000
    links:
      - campaign-service
    depends_on:
      - campaign-service
